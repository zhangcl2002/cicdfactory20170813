user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

   #在容器平台上，下面注释的一节基本不会使用，一般应使用k8s的service来实现集群和负载均衡    
   #upstream local_tomcat {  
   #      server localhost:18080;  
   #      server localhost:18081;  
   #   }   
        
   server {  
       listen       80;  
       server_name  localhost;  
   
        location / {  
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }  
          
        # 所有静态请求都由nginx处理，存放目录为html  
        location ~ \.(gif|jpg|jpeg|png|bmp|swf)$ {  
            root   /usr/share/nginx/html;
        }  
          
        # 所有动态请求都转发给tomcat处理  
        location ~ \.(jsp|do)$ {  
            proxy_pass  @backend_addr@;  
        }  
        
       # 也可以采用如下方式，将某一个上下文的访问请求全部转发到api网关或者
       # 后台服务的Service地址
       
       #location /api-gateway {
       #    proxy_pass http://api-gateway-svc:8080; 
       #    proxy_redirect default;
       #    proxy_set_header Host $host;
       #    proxy_set_header X-Real-IP $remote_addr;
       #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       #   proxy_buffering off;
       #}
        
          
        error_page   500 502 503 504  /50x.html;  
        location = /50x.html {  
            root   html;  
        }  
    }      
            

    include /etc/nginx/conf.d/*.conf;
}
